c: 面向过程的编程思想，主要是函数就是单纯用来做算法处理，从形参得到输入，从return，指针型形参的间址运算写操作，全局变量 可以返回计算结果。
   函数本身不能记下任何变量和计算结果

cpp: 面向对象的编程思想，将函数方法和变量，捆绑在一个class内部，当声明一个class的对象时，这个对象的方法可以读写它的成员变量，相当于一个对象，既有算法，
     也有变量，不需要用户对大量的计算结果另外申请内存来保存。这样变量也容易管理，函数的形参也变得简单。
     类名相当于一批变量的名空间，每个类的对象都会实例化出来一个属于自己对象名的名空间。
     这个对象名的名空间内部的变量，对于该对象的方法来说，相当于全局变量。所以对象的方法可以直接访问该对象的变量。
     面向对象编程，相当于一个对象的一批变量的名空间管理机制。

数据结构: 理论上来说，数组，栈，队列，链表，树，图，等属于数据结构理论，可以用任何计算机语言实现，不是专属于c语言


cpp四大特性： 面向对象，模板，继承，多态


程序偷懒原则：(所有的偷懒，都是为了减少冗余（重复的东西），方便改动，减小代码数量)

1、c的函数封装和调用： 面对不同的参数配置需求，需要实现同样的功能，不可能每次都在main函数中是实现一遍该代码，那样会造成大量的相同代码冗余存在。
                      写起来麻烦，代码多；改起来更麻烦，多处要改动。所以把不同的参数配置需求，用一个形参（数值)代替，再将形参和实现代码，做成一个模块，
                      免得每次使用时都得写整个功能。这样写好函数封装后，每次只需要写一句调用的话。

2、面向对象思想: 通过对象名进行变量和函数的名空间管理。

3、模板类：当同样的功能代码，只是变量类型不一样时，例如不同节点数据类型的链表，不可能每次都实现一次同样的链表6大操作。那么一类型为参数的模块就出现了，模板类。
          和形参是一个道理，模板类的模板传递的就是不同数据类型。

4、继承：当需要对一个已有的类，只是添加少量的成员变量或者成员函数，成为一个新的类。为了避免大量拷贝已有类的代码去构建新类，就以已有代码为父类，继承父类的所有成员变量和
         方法，形成一个派生子类，在子类中添加方法和成员变量，那么子类就既可以使用自己的东西，也可以使用父类的东西（继承有public，protected,private,对继承权限进行管理)

5、多态：在图形界面编程中最常用。例如鼠标右键单击不同的界面（qt，terminal，chrome，desktop),会弹出不同的菜单，但是这都是鼠标右键单击。所以用同一个函数接口，只不过同一个函数
         接口，在不同的对象上调用是，产生不同的行为。这就是多态，简化了调用接口。相当于qt，terminal，chrome，desktop 都继承于系统图形界面(gui)，系统gui有一个鼠标右键单击的函数
         然后4个子类qt，terminal，chrome，desktop都去实现自己的鼠标右键单击函数。然后使用时，把不同的子类对象的地址，赋值到一个父类的指针数组，就可以在父类指针数组中挨个调用
         不同的对象的鼠标右键单击函数，产生不同的行为。




                      
